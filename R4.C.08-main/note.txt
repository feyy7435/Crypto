1--generate RSA public and private keys on both side (client & server)

pip install pycryptodome car c'est plus rapide pour rsa, aes

2--exchange public keys to initiate a secured communication

3--the server must generate a key to encrypt the file (to send) with AES

import os

4--the server's key is crypted with the client's public key and sent to it
5--the client receives the key and decrypt it

-------- Compute the file's hash ----------

6--the server computes the hash of its encrypted file with SHA-3
7--the server encrypts the hash with the client's public key and send it
8--the client received the hash and decrypt it with its private key

-------- Secure the file transfer with AES ----------

9--the server encrypts its file with AES and send it to the client
10--the client receives the file and compute the hash value of this file. It compares the hash to the received one
11--the client decrypts the file with the key received
12--the client stores the uncrypted file on its disk